{
  "prompt": "This depicts the steps of the SR-LDPC encoding process. Information bits are encoded, the symbols of the LDPC codeword are indexed and stacked, and the resulting vector is compressed through matrix multiplication. The encoding is analogous for every user, each with their own sensing matrix.",
  "final_latex_code": "\\documentclass{standalone}\n\\usepackage{tikz}\n\\usetikzlibrary{arrows.meta, shapes.geometric}\n\n\\begin{document}\n\n\\begin{tikzpicture}[node distance=2cm, auto, thick, >=Stealth,\n    state/.style={shape=rectangle, draw, minimum size=10mm},\n    message/.style={shape=circle, draw, minimum size=8mm}]\n\n    % Message input node\n    \\node[message] (input) {$\\mathbf{w}$};\n    \n    % LDPC encoder block\n    \\node[state, right=of input, label={[xshift=-10pt,yshift=30pt]above left:Message}, label={[xshift=-10pt,yshift=-30pt]below left:LDPC}] (encoder) {};\n    \n    % Codeword node\n    \\node[message, right=of encoder, label=above:Codeword] (codeword) {$\\mathbf{v}$};\n    \n    % Indexing operation node\n    \\node[message, below=of codeword, label=below:Index] (index) {$\\mathbf{e}_{\\phi(\\cdot)}$};\n    \n    % State node\n    \\node[message, right=of index, label=above:State] (state) {$\\mathbf{s}$};\n    \n    % Compression operation node\n    \\node[message, below=of state, label=below:Compress] (compress) {$\\mathbf{x}$};\n    \n    % Sensing matrix A\n    \\node[minimum height=1cm, minimum width=1cm, right=of state, xshift=0.5cm] (A) {${\\mathbf{A}}$};\n    \n    % Signal output node\n    \\node[minimum height=1cm, minimum width=1cm, right=of compress, xshift=0.5cm] (signal) {${\\mathbf{x}}$};\n    \n    % Connections\n    \\draw[->] (input) -- (encoder);\n    \\draw[->] (encoder) -- (codeword);\n    \\draw[->] (codeword) -- (index);\n    \\draw[->] (index) -- (state);\n    \\draw[->] (state) -- (compress);\n    \\draw[->] (A) -- (signal);\n\\end{tikzpicture}\n\n\\end{document}",
  "compiled_successfully": true,
  "ground_truth": "\\documentclass[conference]{IEEEtran}\n\\usepackage[utf8]{inputenc}\n\\usepackage{amsmath}\n\\usepackage{amssymb}\n\\usepackage{tikz}\n\\usetikzlibrary{arrows,shapes,chains,matrix,positioning,scopes,patterns,calc,\ndecorations.markings,\ndecorations.pathmorphing,\n}\n\\usepackage{pgfplots}\n\\pgfplotsset{compat=1.3}\n\\usepgflibrary{shapes}\n\n\\newcommand{\\wv}{\\ensuremath{\\mathbf{w}}}\n\n\\newcommand{\\Am}{\\ensuremath{\\mathbf{A}}}\n\n\\newcommand{\\vv}{\\ensuremath{\\mathbf{v}}}\n\n\\newcommand{\\sv}{\\ensuremath{\\mathbf{s}}}\n\n\\newcommand{\\xv}{\\ensuremath{\\mathbf{x}}}\n\n\\newcommand{\\ev}{\\ensuremath{\\mathbf{e}}}\n\n\\begin{document}\n\n\\begin{tikzpicture}\n  [\n  font=\\footnotesize, >=stealth', line width=1pt,\n  check/.style={rectangle, minimum height=2.5mm, minimum width=2.5mm, draw=black},\n  varnode/.style={circle, minimum size=2mm, draw=black},\n  mmse/.style={rectangle, minimum height=7.5mm, minimum width=25mm, rounded corners, draw=black},\n  quantity/.style={rectangle, minimum height=8mm, minimum width=8mm, rounded corners, draw=black},\n  multiply/.style={trapezium, trapezium angle=75, draw=black, minimum width=10mm, minimum height=8mm, rounded corners}\n  ]\n\n\n\n\\node[rotate=90,anchor=west] (message) at (-0.25,0.25) {Message};\n\\node (bits) at (-0.25,0) {$\\wv$};\n\n\\node[rotate=90,anchor=west] (ldpc) at (0.5,0.25) {LDPC};\n\\draw[draw=black, rounded corners] (0.75, -0.45) rectangle (2.25,1.65);\n\\foreach \\s in {1,2,3,4,5} {\n  \\node[varnode] (var-\\s) at (1,0.4*\\s-0.6) {};\n}\n\\foreach \\c in {1,2,3} {\n  \\node[check] (check-\\c) at (2,0.65*\\c-0.7) {};\n}\n\\draw (var-5) -- (check-3.west);\n\\draw (var-4) -- (check-3.west);\n\\draw (var-3) -- (check-3.west);\n\\draw (var-2) -- (check-2.west);\n\\draw (var-5) -- (check-2.west);\n\\draw (var-4) -- (check-1.west);\n\\draw (var-2) -- (check-1.west);\n\\draw (var-1) -- (check-1.west);\n\n\\foreach \\v in {5.75} {\n  \\draw[line width=1pt] (\\v-0.325,1) -- (\\v-0.4,1) -- (\\v-0.4,0.6) -- (\\v-0.325,0.6);\n  \\draw[line width=1pt] (\\v+0.325,1) -- (\\v+0.4,1) -- (\\v+0.4,0.6) -- (\\v+0.325,0.6);\n  \\draw[line width=1pt] (\\v+0.5,1) -- (\\v+0.5,0.2) -- (\\v+0.6,0.2) -- (\\v+0.6,1) -- (\\v+0.5,1);\n  \\node at (\\v,0.8) {$\\Am$};\n}\n\n\\node[rotate=90,anchor=west] (codeword) at (3,0.25) {Codeword};\n\\node (symbols) at (3,0) {$\\vv$};\n\n\\node (indexing) at (3.75,-0.25) {Index};\n\n\\node[rotate=90,anchor=west] (state) at (4.5,0.25) {State};\n\\node (index) at (4.5,0) {$\\sv$};\n\n\\node (compression) at (5.75,-0.25) {Compress};\n\n\\node[rotate=90,anchor=west] (signal) at (7.25,0.25) {Signal};\n\\node (x) at (7.25,0) {$\\xv$};\n\n\\draw[->] (bits) to (0.75,0);\n\\draw[->] (2.25,0) to (symbols);\n\\draw[->] (symbols) to node[above]{$\\ev_{\\phi(\\cdot)}$} (index);\n\\draw[->] (index) to (x);\n\n\\end{tikzpicture}\n\n\\end{document}",
  "attempts": 1
}