{
  "prompt": "Overview of the structure of the UPINN method as applied to~\\eqref{eq:1}, which shows inputs and outputs of all known and unknown components, as well as losses. The surrogate solution $U$ outputted by the UPINN takes time $t$ as input. Both $F$ (the known component of the differential equation) and $G$ (the unknown component, to be fit by the UPINN) take in time and $\\hat{U}$, the prediction of the neural network, as input. $F$ and $G$, along with $U_t$ (the autodifferentiated derivative of $U_{NN}$ w.r.t. time) and is passed as input to the PINN loss. Then, the PINN loss computes the error between $U_t$ and $F+G$. The MSE loss computes the error between the surrogate solution $\\hat{U}$ and the data.",
  "final_latex_code": "\\documentclass[border=5mm]{standalone}\n\\usepackage{tikz}\n\\usetikzlibrary{arrows.meta, positioning}\n\n\\begin{document}\n\n\\begin{tikzpicture}[node distance = 2cm,\n    block/.style={draw, thick, fill=white!20, minimum height=2em},\n    sum/.style={draw, circle, node distance=2.5cm},\n    pinstyle/.style={pin edge={to-,thin,black}}\n]\n\n% Nodes \n\\node [block, fill=red!30] (F) {$F$};\n\\node [block, right=of F, fill=green!30] (G) {$G$};\n\\node [block, below=of F, fill=green!30] (U) {$\\hat{U}$};\n\\node [sum, above=of F] (Udot) {};\n\\node [sum, right=of Udot] (plus) {};\n\\node [sum, left=of F] (Fdot) {};\n\\node [block, above=of plus, fill=magenta!30] (PINN) {PINN loss};\n\\node [block, right=of plus, fill=red!30] (MSE) {MSE loss};\n\\node [block, above=of MSE, fill=red!30] (Loss) {Loss};\n\\node [block, above=1cm of F, fill=white!60] (U_t) {$U_t$};\n\n% Connectors\n\\draw[->] (U_t) -- node[auto] {$U_t$} (PINN);\n\\draw[->] (U_t) -- node[auto, swap] {(autodiff)} (Fdot);\n\\draw[->] (Fdot) -- node[auto] {} (Udot);\n\\draw[->] (Udot) -- (Udot-|PINN.west);\n\\draw[->] (Fdot) -- (Fdot-|PINN.west);\n\\draw[->] (Fdot) -- node[auto] {} (plus);\n\\draw[->] (F) -- node[auto] {} (plus);\n\\draw[->] (plus) -- (plus-|G.east);\n\\draw[->] (G) -- node[auto] {} (plus);\n\\draw[->] (plus) -- (plus-|Udot.west);\n\\draw[->] (Fdot-|PINN.west) |- (Udot-|PINN.west);\n\\draw[->] (U) -- (U-|Fdot.east);\n\\draw[->] (U) -- (U-|G.east);\n\\draw[->] (G) -- (G-|U.east);\n\\draw[->] (Udot) -- (Udot-|U.east);\n\\draw[->] (Udot) -- (Udot-|PINN.west);\n\n% Surrogate Solution\n\\node at ([yshift=-4cm]U.center) {\\textcolor{gray!50}{surrogate solution}};\n% Loss Components\n\\node at ([xshift=3.5cm,yshift=2cm]MSE.north) {\\textcolor{gray!50}{Loss components}};\n\\node at ([xshift=3.5cm,yshift=-1cm]U.north) {\\textcolor{gray!50}{Neural networks}};\n\n\n\\end{tikzpicture}\n\n\\caption{Overview of the structure of the UPINN method as applied to \\eqref{eq:1}. The surrogate solution $\\hat{U}$ outputted by the UPINN takes time $t$ as input. Both $F$ (the known component of the differential equation) and $G$ (the unknown component, to be fit by the UPINN) take in time and $\\hat{U}$, the prediction of the neural network, as input. $F$ and $G$, along with $U_t$ (the autodifferentiated derivative of $U_{NN}$ w.r.t. time) are passed as input to the PINN loss. Then, the PINN loss computes the error between $U_t$ and $F+G$. The MSE loss computes the error between the surrogate solution $\\hat{U}$ and the data.}\n\\label{fig:UPINN_structure}\n\n\\end{document}",
  "compiled_successfully": true,
  "ground_truth": "\\documentclass{article}\n\\usepackage[utf8]{inputenc}\n\\usepackage[T1]{fontenc}\n\\usepackage{amsmath}\n\\usepackage{tikz}\n\\usetikzlibrary{positioning}\n\\usetikzlibrary{arrows.meta,arrows}\n\n\\begin{document}\n\n\\begin{tikzpicture}[greennode/.style={shape=rectangle, fill=green, draw=black, fill opacity=0.2,text opacity=1.0,align=center},\nrednode/.style={shape=rectangle, fill=red, draw=black, fill opacity=0.2,text opacity=1.0,align=center}\n,font=\\sffamily]\n\\tikzstyle{every node}=[font=\\large]\n  \\node[circle,draw] (add_1) at (0,0) {$+$};\n  \\node[rednode]  (loss) at (0,2)  {Loss};\n\n  \\node[rednode] (pinn_loss) [below left=1cm and 1cm of add_1]  {PINN loss};% 2cm below, 1cm to the left (optional)\n  \\node[circle,draw] (add_2) [below=1cm of pinn_loss] {$+$};\n  \\node[rednode] (mse_loss) [below right=1cm and 1cm of add_1] {MSE loss};\n  \\node[rectangle,draw,align=center]  (G) [below left=2cm and 2cm of add_2]  {$F$\\\\(known component)};\n  \\node[greennode]  (F) [below right=2cm and 2cm of add_2]  {$G$ \\\\(unknown component)};\n  \\node[rectangle,draw,align=center,fill=green, fill opacity=0.2,text opacity=1.0]  (U) [below=4cm of add_2]  {$U$ \\\\(surrogate solution)};\n  \\node  (t) [below=3cm of G]  {$t$ (time)};\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (mse_loss) |- (add_1);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (pinn_loss) |- (add_1);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (G) |- (add_2);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (F) |- (add_2);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (add_1) -- (loss);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (add_2) -- (pinn_loss);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (U.north) |- (F.west) node[midway,above] {$\\hat{U}$} ;\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (U.north) |- (G.east) ;\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (t) -- (G);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (t.east) -| (U);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (t.east) -| (F);\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (U.east) -| (5,-5) |- (mse_loss.east) node[pos=0.75,above,align=center] {$\\hat{U}$};\n  \\draw [-{Stealth[length=3mm, width=2mm]}] (U.west) -| (-9,-5)  |- (pinn_loss.west) node[pos=0.75,above,align=center] {$U_t$ \\\\ (autodiff)};\n  \\matrix [draw, below] at (current bounding box.north east) {\n    \\node [greennode,label=right:Neural networks] {}; \\\\\n    \\node [rednode,label=right:Loss components] {}; \\\\\n  };\n  \\end{tikzpicture}\n\n\\end{document}",
  "attempts": 1
}