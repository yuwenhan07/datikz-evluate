nohup: ignoring input
2025-08-19 21:40:27.575210: I tensorflow/core/util/port.cc:153] oneDNN custom operations are on. You may see slightly different numerical results due to floating-point round-off errors from different computation orders. To turn them off, set the environment variable `TF_ENABLE_ONEDNN_OPTS=0`.
2025-08-19 21:40:27.594485: E external/local_xla/xla/stream_executor/cuda/cuda_fft.cc:477] Unable to register cuFFT factory: Attempting to register factory for plugin cuFFT when one has already been registered
WARNING: All log messages before absl::InitializeLog() is called are written to STDERR
E0000 00:00:1755610827.614075 2341769 cuda_dnn.cc:8310] Unable to register cuDNN factory: Attempting to register factory for plugin cuDNN when one has already been registered
E0000 00:00:1755610827.619935 2341769 cuda_blas.cc:1418] Unable to register cuBLAS factory: Attempting to register factory for plugin cuBLAS when one has already been registered
2025-08-19 21:40:27.640806: I tensorflow/core/platform/cpu_feature_guard.cc:210] This TensorFlow binary is optimized to use available CPU instructions in performance-critical operations.
To enable the following instructions: AVX2 AVX512F AVX512_VNNI FMA, in other operations, rebuild TensorFlow with the appropriate compiler flags.
Loading checkpoint shards:   0%|          | 0/5 [00:00<?, ?it/s]Loading checkpoint shards:  20%|██        | 1/5 [00:01<00:05,  1.44s/it]Loading checkpoint shards:  40%|████      | 2/5 [00:02<00:03,  1.28s/it]Loading checkpoint shards:  60%|██████    | 3/5 [00:03<00:02,  1.23s/it]Loading checkpoint shards:  80%|████████  | 4/5 [00:04<00:01,  1.20s/it]Loading checkpoint shards: 100%|██████████| 5/5 [00:05<00:00,  1.13it/s]Loading checkpoint shards: 100%|██████████| 5/5 [00:05<00:00,  1.05s/it]
Using a slow image processor as `use_fast` is unset and a slow processor was saved with this model. `use_fast=True` will be the default behavior in v4.52, even if the model was saved with a slow processor. This will result in minor differences in outputs. You'll still be able to use a slow processor with `use_fast=False`.
You have video processor config saved in `preprocessor.json` file which is deprecated. Video processor configs should be saved in their own `video_preprocessor.json` file. You can rename the file or load and save the processor back which renames it automatically. Loading from `preprocessor.json` will be removed in v5.0.
  0%|          | 0/542 [00:00<?, ?it/s]  0%|          | 1/542 [00:18<2:47:00, 18.52s/it]  0%|          | 2/542 [00:40<3:02:47, 20.31s/it]  1%|          | 3/542 [01:07<3:32:44, 23.68s/it]  1%|          | 4/542 [01:26<3:15:07, 21.76s/it]  1%|          | 5/542 [01:46<3:07:11, 20.91s/it]  1%|          | 6/542 [02:19<3:45:46, 25.27s/it]